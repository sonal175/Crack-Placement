// Postorder traversal of a binary tree

//Recursive Approach
 void postorder(TreeNode*root,vector<int>&v){
        if(root==NULL) return ;
        postorder(root->left,v);
        postorder(root->right,v);
        v.push_back(root->val);
        return;
    }
    vector<int> postorderTraversal(TreeNode* root) {
        if(root ==NULL){
            vector<int> v;
            return v;
        }
        vector<int>v;
        postorder(root,v);
        return v;
    }
    
    //Iterative Approach
    vector<int> postorderTraversal(TreeNode* root) {
        if(root==NULL){
            vector<int>v;
            return v;
        }
        vector<int>v;
        stack<TreeNode*>s;
        TreeNode*curr=root;
        while(curr!=NULL || !s.empty()){
            if(curr!=NULL){
                s.push(curr);
                curr=curr->left;
                    
            }else{
                TreeNode* temp=s.top()->right;
                if(temp==NULL){
                    temp=s.top();
                    s.pop();
                    v.push_back(temp->val);
                    while(!s.empty() && temp==s.top()->right){
                        temp=s.top();
                        s.pop();
                        v.push_back(temp->val);
                    }
                }else{
                    curr=temp;
                }
            }
        }
        return v;
    }
