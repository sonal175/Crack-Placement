// Recursive Approach

void inorder(TreeNode*root,vector<int>&v){
        if(root==NULL) return ;
        inorder(root->left,v);
        v.push_back(root->val);
        inorder(root->right,v);
        return;
    }
    vector<int> inorderTraversal(TreeNode* root) {
        if(root==NULL   ){
            vector<int>v;
            return v;
        }
        vector<int>v;
        inorder(root,v);
        return v;
    }


// Iterative Approach

vector<int> inorderTraversal(TreeNode* root) {
        vector<int>v;
        stack<TreeNode *>s;
        TreeNode*node=root;
        while(true){
            if(node!=NULL){
                s.push(node);
                node=node->left;
            }else{
                if(s.empty()==true) break;
                node=s.top();
                s.pop();
                v.push_back(node->val);
                node=node->right;
            }
                
            
        }
        return v;
    }
