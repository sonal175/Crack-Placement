// Minimum swaps required to convert binary tree into bst


int minswaps(vector<int>&a){
    int n=a.size();
    vector<pair<int,int>>v(n);
    for(int i=0;i<n;i++){
        v[i].first=a[i];
        v[i].second=i;
    }
    sort(v.begin(),v.end());
    int c=0;
    for(int i=0;i<n;i++){
        if(v[i].second==i) {
            continue;
        }else{
            c++;
            swap(v[i],v[v[i].second]);
            i--;
        }
    }
    return c;
}
void inorder(vector<int>&a,int id,vector<int>&f,int n){
    if(id>=n) return;
    inorder(a,2*id+1,f,n);
    f.push_back(a[id]);
    inorder(a,2*id+2,f,n);
    
}

int minimumSwaps(vector<int>&a){
    vector<int>f;
    inorder(a,0,f,a.size());
    int v=minswaps(a);
    return v;
}
