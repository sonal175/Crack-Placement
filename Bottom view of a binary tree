// Bottom view of a binary tree

 vector <int> bottomView(Node *root) {
        // Your Code Here
        map<int,int>m;
        queue<pair<Node*,int>>q;
        q.push({root,0});
        while(q.size()>0){
            pair<Node*,int>p=q.front();
            q.pop();
            Node *n=p.first;
            int v=p.second;
            
                m[v]=n->data;
            
            if(n->left!=NULL){
                q.push({n->left,v-1});
            }
            if(n->right!=NULL){
                q.push({n->right,v+1});
            }
            
        }
        vector<int>ans;
        for(auto k:m){
            ans.push_back(k.second);
        }
        return ans;
    }
