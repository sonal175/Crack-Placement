// Postorder Morris Traversal

// TC-O(n)  SC-O(1)

// Code--

  vector<int>postorder (TreeNode*root){
    vector<int>postorder;
     TreeNode*curr=root;
     while(curr!=NULL){
       if(curr->right==NULL){
         postorder.push_back(curr->val);
          curr=curr->left;
        }
        else {
          TreeNode* prev=curr->right;
          while(prev->left && prev->left!=curr){
            prev=prev->left;
           }
           
         if(prev->left==NULL){
           postorder.push_back(curr->val);
           prev->left=curr;
           curr=curr->right;
          }
          else{
            prev->left=NULL;
            curr=curr->left;
          }
         }
        }
        reverse(postorder.begin(),postorder.end());
        return postorder;
       }
          
