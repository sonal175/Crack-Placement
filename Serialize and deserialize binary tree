// Serialize and Deserialize binary tree

// Code--

string serialize(TreeNode* root) {
        if(root== NULL) return "";
        string s="";
        queue<TreeNode*>q;
        q.push(root);
        while(q.size()>0){
            TreeNode*p=q.front();
            q.pop();
            if(p==NULL){
                s+="#,";
            }else{
                s+=(to_string(p->val))+',';
            }
            if(p!=NULL){
                q.push(p->left);
                q.push(p->right);
            }
            
        }
        return s;
    }

    // Decodes your encoded data to tree.
    TreeNode* deserialize(string data) {
        if(data.size()==0) return NULL;
        stringstream s(data);
        string str;
        getline(s,str,',');
        TreeNode*root=new TreeNode(stoi(str));
        queue<TreeNode*>q;
        q.push(root);
        while(q.size()>0){
            TreeNode*node=q.front();
            q.pop();
            getline(s,str,',');
            if(str=="#"){
                node->left=NULL;
            }else{
                TreeNode*l=new TreeNode(stoi(str));
                node->left=l;
                q.push(l);
            }
            getline(s,str,',');
             if(str=="#"){
                node->right=NULL;
            }else{
                TreeNode*r=new TreeNode(stoi(str));
                node->right=r;
                q.push(r);
            }
        }
        return root;
    }
