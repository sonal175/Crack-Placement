// count pairs from two bst's whose sum is equal to x

By using iterative inorder traversal we can traverse two bst's simultaneously and found answers
TC-O(n1+n2) wher n1 and n2 are total nodes in bst 1 and 2
SC-O(h1+h2) where h1 and h2 are height of bst 1 and bst 2

Code--


int countPairs(Node* root1, Node* root2, int x)
    {  int cnt=0;
      stack<Node*>s1,s2;
      while(1){
          while(root1!=NULL){
              s1.push(root1);
              root1=root1->left;
          }
          while(root2!=NULL){
              s2.push(root2);
              root2=root2->right;
          }
         //if(s1.empty() || s2.empty()) break;
          Node*top1=s1.top();
          Node*top2=s2.top();
          if(top1->data+top2->data==x){
              cnt++;
              s1.pop();
              s2.pop();
              root1=top1->right;
              root2=top2->left;
          }else if((top1->data+top2->data)<x){
              s1.pop();
              root1=top1->right;
          }else{
              s2.pop();
              root2=top2->left;
          }
          
      }
      return cnt;
    }
    
    
